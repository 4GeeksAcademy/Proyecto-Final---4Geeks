"""empty message

Revision ID: ce1f140c67a5
Revises: b054eeb46571
Create Date: 2024-04-07 10:09:07.531628

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ce1f140c67a5'
down_revision = 'b054eeb46571'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alergic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('alergic', sa.Boolean(), nullable=False),
    sa.Column('alergic_name', sa.String(length=250), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('patient_id')
    )
    op.create_table('medicated',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('medicated', sa.Boolean(), nullable=False),
    sa.Column('medicated_name', sa.String(length=250), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('patient_id')
    )
    op.drop_table('favorite_speciality')
    op.drop_table('favorite_doctor')
    with op.batch_alter_table('patient', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=120),
               nullable=False)
        batch_op.alter_column('surname',
               existing_type=sa.VARCHAR(length=120),
               nullable=False)
        batch_op.alter_column('age',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('identification',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('social_security',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_unique_constraint(None, ['identification'])
        batch_op.create_unique_constraint(None, ['social_security'])
        batch_op.drop_column('specific_medicated')
        batch_op.drop_column('alergic')
        batch_op.drop_column('specific_alergic')
        batch_op.drop_column('medicated')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('patient', schema=None) as batch_op:
        batch_op.add_column(sa.Column('medicated', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('specific_alergic', sa.VARCHAR(length=250), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('alergic', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('specific_medicated', sa.VARCHAR(length=250), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('social_security',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('identification',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('age',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('surname',
               existing_type=sa.VARCHAR(length=120),
               nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=120),
               nullable=True)

    op.create_table('favorite_doctor',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('medical_appointment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('speciality_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patient_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('doctor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.id'], name='favorite_doctor_doctor_id_fkey'),
    sa.ForeignKeyConstraint(['medical_appointment_id'], ['medical_appointment.id'], name='favorite_doctor_medical_appointment_id_fkey'),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], name='favorite_doctor_patient_id_fkey'),
    sa.ForeignKeyConstraint(['speciality_id'], ['speciality.id'], name='favorite_doctor_speciality_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='favorite_doctor_pkey')
    )
    op.create_table('favorite_speciality',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('medical_appointment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('speciality_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('patient_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('doctor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.id'], name='favorite_speciality_doctor_id_fkey'),
    sa.ForeignKeyConstraint(['medical_appointment_id'], ['medical_appointment.id'], name='favorite_speciality_medical_appointment_id_fkey'),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], name='favorite_speciality_patient_id_fkey'),
    sa.ForeignKeyConstraint(['speciality_id'], ['speciality.id'], name='favorite_speciality_speciality_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='favorite_speciality_pkey')
    )
    op.drop_table('medicated')
    op.drop_table('alergic')
    # ### end Alembic commands ###
